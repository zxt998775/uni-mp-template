{"version":3,"file":"cart.api.js","sources":["../../../../src/api/cart.api.ts"],"sourcesContent":["/**\n * 加入购物车\n * @param data 请求体参数\n */\nexport const postMemberCartAPI = (data: CartParams) => {\n  return http({\n    method: 'POST',\n    url: '/cart/add',\n    data\n  })\n}\n/**\n * 获取购物车列表\n */\nexport const getMemberCartAPI = () => {\n  return http<CartItem[]>({\n    method: 'GET',\n    url: '/cart/list'\n  })\n}\n/**\n * 删除/清空购物车单品\n * @param data 请求体参数 ids SKUID 集合\n */\nexport const deleteMemberCartAPI = (ids: string[]) => {\n  return http({\n    method: 'DELETE',\n    url: '/cart/remove',\n    data: ids\n  })\n}\n/**\n * 修改购物车单品\n * @param id 单品 id\n * @param data selected 选中状态 count 商品数量\n */\nexport const putMemberCartBySkuIdAPI = (id: string, data: { selected?: boolean; count?: number }) => {\n  return http({\n    method: 'PUT',\n    url: '/cart/edit',\n    data: { id, ...data }\n  })\n}\n/**\n * 购物车全选/取消全选\n * @param data selected 是否选中\n */\nexport const putMemberCartSelectedAPI = (data: { selected: boolean }) => {\n  return http({\n    method: 'PUT',\n    url: `/cart/selected?selected=${data.selected}`\n  })\n}\n\n/**\n * 填写订单-获取预付订单\n */\nexport const getMemberOrderPreAPI = () => {\n  return http<OrderPreResult>({\n    method: 'GET',\n    url: '/order/pre'\n  })\n}\n\n/**\n * 填写订单-获取立即购买订单\n */\nexport const getMemberOrderPreNowAPI = (data: {\n  /** 商品主键 */\n  id: string\n  /** 商品属性 */\n  attrsText: string\n  /** 地址id */\n  addressId?: string\n  /** 商品数量 */\n  count: string\n}) => {\n  return http<OrderPreResult>({\n    method: 'POST',\n    url: '/order/pre/now',\n    data\n  })\n}\n\n/**\n * 提交订单\n * @param data 请求参数\n */\nexport const postMemberOrderAPI = (data: OrderCreateParams) => {\n  return http<{ id: string }>({\n    method: 'POST',\n    url: '/order/submit',\n    data\n  })\n}\n/**\n * 获取订单详情\n * @param id 订单id\n */\nexport const getMemberOrderByIdAPI = (id: string) => {\n  return http<OrderResult>({\n    method: 'GET',\n    url: '/order/info',\n    data: { id }\n  })\n}\n/**\n * 填写订单-再次购买\n * @param id 订单id\n */\nexport const getMemberOrderRepurchaseByIdAPI = (id: string) => {\n  return http<OrderPreResult>({\n    method: 'GET',\n    url: `/order/repurchase`,\n    data: { id }\n  })\n}\n\n/**\n * 获取微信支付参数\n * @param data orderId 订单id\n */\nexport const getPayWxPayMiniPayAPI = (data: { orderId: string }) => {\n  return http<WechatMiniprogram.RequestPaymentOption>({\n    method: 'GET',\n    url: '/pay/wxPay/miniPay',\n    data\n  })\n}\n\n/**\n * 模拟支付-内测版\n * @param data orderId 订单id\n */\nexport const getPayMockAPI = (id: number) => {\n  return http({\n    method: 'GET',\n    url: '/order/pay',\n    data: { id }\n  })\n}\n/**\n * 模拟发货-内测版\n * @description 在DEV环境下使用，仅在订单状态为待发货时，可模拟发货，调用后订单状态修改为待收货，包含模拟物流。\n * @param id 订单id\n */\nexport const getMemberOrderConsignmentByIdAPI = (id: string) => {\n  return http({\n    method: 'GET',\n    data: { id },\n    url: '/order/consignment'\n  })\n}\n\n/**\n * 确认收货\n * @description 仅在订单状态为待收货时，可确认收货。\n * @param id 订单id\n */\nexport const putMemberOrderReceiptByIdAPI = (id: string) => {\n  return http<OrderResult>({\n    method: 'PUT',\n    url: `/order/receipt?id=${id}`\n  })\n}\n/**\n * 获取订单物流\n * @description 仅在订单状态为待收货，待评价，已完成时，可获取物流信息。\n * @param id 订单id\n */\nexport const getMemberOrderLogisticsByIdAPI = (id: string) => {\n  return http<OrderLogisticResult>({\n    method: 'GET',\n    url: '/order/logistics',\n    data: { id }\n  })\n}\n/**\n * 删除订单\n * @description 仅在订单状态为待评价，已完成，已取消时，可删除订单。\n * @param data ids 订单集合\n */\nexport const deleteMemberOrderAPI = (ids: string[]) => {\n  return http({\n    method: 'DELETE',\n    url: `/order/delete`,\n    data: ids\n  })\n}\n/**\n * 取消订单\n * @description 仅在订单状态为待付款时，可取消订单。\n * @param data cancelReason 取消理由; id 订单id\n */\nexport const getMemberOrderCancelByIdAPI = (data: { id: string; cancelReason: string }) => {\n  return http<OrderResult>({\n    method: 'PUT',\n    url: '/order/cancel',\n    data\n  })\n}\n\n/**\n * 获取订单列表\n * @param data orderState 订单状态\n */\nexport const getMemberOrderAPI = (data: OrderListParams) => {\n  return http<OrderListResult>({\n    method: 'POST',\n    url: `/order/page`,\n    data\n  })\n}\n"],"names":["http"],"mappings":";;AAIa,MAAA,oBAAoB,CAAC,SAAqB;AACrD,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EAAA,CACD;AACH;AAIO,MAAM,mBAAmB,MAAM;AACpC,SAAOA,gBAAiB;AAAA,IACtB,QAAQ;AAAA,IACR,KAAK;AAAA,EAAA,CACN;AACH;AAKa,MAAA,sBAAsB,CAAC,QAAkB;AACpD,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,EAAA,CACP;AACH;AAMa,MAAA,0BAA0B,CAAC,IAAY,SAAiD;AACnG,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM,EAAE,IAAI,GAAG,KAAK;AAAA,EAAA,CACrB;AACH;AAKa,MAAA,2BAA2B,CAAC,SAAgC;AACvE,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,KAAK,2BAA2B,KAAK,QAAQ;AAAA,EAAA,CAC9C;AACH;AAKO,MAAM,uBAAuB,MAAM;AACxC,SAAOA,gBAAqB;AAAA,IAC1B,QAAQ;AAAA,IACR,KAAK;AAAA,EAAA,CACN;AACH;AAKa,MAAA,0BAA0B,CAAC,SASlC;AACJ,SAAOA,gBAAqB;AAAA,IAC1B,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EAAA,CACD;AACH;AAMa,MAAA,qBAAqB,CAAC,SAA4B;AAC7D,SAAOA,gBAAqB;AAAA,IAC1B,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EAAA,CACD;AACH;AAKa,MAAA,wBAAwB,CAAC,OAAe;AACnD,SAAOA,gBAAkB;AAAA,IACvB,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM,EAAE,GAAG;AAAA,EAAA,CACZ;AACH;AAKa,MAAA,kCAAkC,CAAC,OAAe;AAC7D,SAAOA,gBAAqB;AAAA,IAC1B,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM,EAAE,GAAG;AAAA,EAAA,CACZ;AACH;AAkBa,MAAA,gBAAgB,CAAC,OAAe;AAC3C,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM,EAAE,GAAG;AAAA,EAAA,CACZ;AACH;AAMa,MAAA,mCAAmC,CAAC,OAAe;AAC9D,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,MAAM,EAAE,GAAG;AAAA,IACX,KAAK;AAAA,EAAA,CACN;AACH;AAOa,MAAA,+BAA+B,CAAC,OAAe;AAC1D,SAAOA,gBAAkB;AAAA,IACvB,QAAQ;AAAA,IACR,KAAK,qBAAqB,EAAE;AAAA,EAAA,CAC7B;AACH;AAMa,MAAA,iCAAiC,CAAC,OAAe;AAC5D,SAAOA,gBAA0B;AAAA,IAC/B,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM,EAAE,GAAG;AAAA,EAAA,CACZ;AACH;AAMa,MAAA,uBAAuB,CAAC,QAAkB;AACrD,SAAOA,gBAAK;AAAA,IACV,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,EAAA,CACP;AACH;AAMa,MAAA,8BAA8B,CAAC,SAA+C;AACzF,SAAOA,gBAAkB;AAAA,IACvB,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EAAA,CACD;AACH;AAMa,MAAA,oBAAoB,CAAC,SAA0B;AAC1D,SAAOA,gBAAsB;AAAA,IAC3B,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EAAA,CACD;AACH;;;;;;;;;;;;;;;;;;"}